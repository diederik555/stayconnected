import java.net.HttpURLConnection;
import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;

public class FindLocation {

    public static void main(String[] args) {

        Connection con = null;
        PreparedStatement pst = null;
        PreparedStatement pstr = null;
        ResultSet rst = null;
        ResultSet rs = null;
        Statement st = null;
        Statement del = null;

        String url = "jdbc:mysql://mysql11.cp.hostnet.nl:3306/db30984_stayc";
        String user = "u30984_fhd";
        String password = "stayconnected";

        try {
            con = DriverManager.getConnection(url, user, password);
            pst = con.prepareStatement("SELECT * FROM sortedDatabase");
            rs = pst.executeQuery();

            while (rs.next()) {
            	String accountName = rs.getString(1);
                float latitude = Float.valueOf(rs.getString(3));
                float longitude = Float.valueOf(rs.getString(4));
                String sexs = rs.getString(6);
                
                System.out.print("Account Name: " + accountName);
                System.out.print(" -- Latitude: " + latitude);
                System.out.print(" -- Longitude: " + longitude);
                System.out.println(" -- Sex: " + sexs);
                
                pstr = con.prepareStatement("SELECT * FROM profiles WHERE accountName = '" + accountName + "'");
                rst = pstr.executeQuery();
                
	            if (rst.next()) {
                	String sex = rst.getString(2);
                	float activity = Float.valueOf(rst.getString(3));
                	String cities = rst.getString(4);
                	
                	System.out.print("Account Name: " + accountName);
                    System.out.print(" -- Sex: " + sex);
                    System.out.print(" -- Activity: " + activity);
                    System.out.println(" -- Cities: " + cities);
                }
	            else {
                	String sex = sexs;
                	float activity = 50.0f;
                	String cities = "Amsterdam(40)(300)";
                	http://maps.googleapis.com/maps/api/geocode/json?latlng=52.3642,4.8786&sensor=false
                	
                	url = new URL("http://example.com");
                	HttpURLConnection connection = (HttpURLConnection)url.openConnection();
                	connection.setRequestMethod("GET");
                	connection.connect();

                	int code = connection.getResponseCode();
                		
                	/*	var arrAddress = item.results[0].address_components;
                	// iterate through address_component array
                	$.each(arrAddress, function (i, address_component) {
                	    if (address_component.types[0] == "locality") // locality type
                	        console.log(address_component.long_name); // here's your town name
                	        return false; // break the loop
                	    });*/
                	
                	System.out.println("Creating new profile with account name: " + accountName);
                	
                	con.setAutoCommit(false);
                    st = con.createStatement();
                	st.addBatch("INSERT INTO profiles(accountName, sex, activity, cities) "+
                			"VALUES('"+accountName+"', '"+sex+"', '"+activity+"', '"+cities+"')");
                	int counts[] = st.executeBatch();
                	del = con.createStatement();
                	con.commit();
                	
                	System.out.println("Committed " + counts.length + " updates");
                }
            }
        } catch (SQLException ex) {
        	Logger lgr = Logger.getLogger(MySQLConnection.class.getName());
        	lgr.log(Level.SEVERE, ex.getMessage(), ex);
    	} 
        
        
        finally {
            try {
                if (rs != null) {
                    rs.close();
                }
                if (pst != null) {
                    pst.close();
                }
                if (st != null) {
                    st.close();
                }
                if (del != null) {
                    del.close();
                }
                if (con != null) {
                    con.close();
                }
            } catch (SQLException ex) {
                Logger lgr = Logger.getLogger(FindLocation.class.getName());
                lgr.log(Level.WARNING, ex.getMessage(), ex);
            }
        }
    }
}
